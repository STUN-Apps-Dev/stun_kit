import 'dart:async';

/// Интерфейс для сервиса обработки исключений в приложении.
///
/// Определяет контракт для реализации функционала, связанного с инициализацией,
/// перехватом исключений и выполнением действий после завершения запуска приложения.
abstract interface class ExceptionService {
  /// Инициализирует сервис обработки исключений.
  ///
  /// Метод должен выполнить первичную настройку и подготовку сервиса для последующей работы.
  /// Возвращает [Future], который завершается после успешной инициализации.
  Future<void> init();

  /// Перехватывает исключение и обрабатывает его.
  ///
  /// [error] — объект ошибки, которую необходимо обработать.
  /// [stackTrace] — опциональная трассировка стека, связанная с ошибкой.
  ///
  /// Возвращает [Future], который завершается после выполнения обработки ошибки.
  Future<void> capture(Object error, StackTrace? stackTrace);

  /// Отмечает, что процесс запуска приложения завершён.
  ///
  /// Метод может выполнять дополнительные действия по завершению запуска приложения,
  /// например, запуск логирования исключений. Может возвращать [Future] или выполняться синхронно.
  FutureOr<void> markLaunchCompleted();
}
